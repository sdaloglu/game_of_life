# Make file for CMake Project commands

# Name of the targets
BUILDS = build release debug clean docs run_tests

.PHONY := $(BUILDS)

.DEFAULT_GOAL := release


# First run "make build" to create the build directory and generate the build files.
# Then run "make release" to compile the project in release mode.

build:
# For building the project, we need to create a build directory and then run cmake to generate the build files.
# -S . : Source directory
# -B build : Build directory
# This step prepares the project for compilation.
	@echo "Building CMake Projectcs for both debug and release ..."
	@echo "Specify which sub-build directory to use for compilation "
	cmake -S . -B build/release -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS_RELEASE="-O3" 
	cmake -S . -B build/debug -DCMAKE_BUILD_TYPE=Debug
	cmake -S . -B build/docs
	cmake -S . -B build/test
	@echo "Done!"


release:
# Compile the project using the build files generated by cmake.
# Linking and producing the final executable(s) are also performed here.
	@echo "Compiling Project in release mode ..."
	cmake --build build/release
	@echo "Done!"

debug:
# Compile the project using the build files generated by cmake.
# Linking and producing the final executable(s) are also performed here.
	@echo "Compiling Project in debug mode ..."
	cmake --build build/debug
	@echo "Done!"


clean:
# Remove the build directory to clean the project.
# Ideally, we shall never need to remove the build directory.
	@echo "Cleaning CMake Project..."
	rm -rf build
	@echo "Done Cleaning CMake Project!"
	@echo "You need to run 'make build' to rebuild the project."

docs:
# Generate the documentation for the project.
	@echo "Generating Documentation for the project ..."
	cmake --build build/docs -t doxygen
	@echo "Documentation generated in the specified Doxygen output directory!"


run_tests:
# Run the tests for the project.
	@echo "Running test for the project ..."
	cmake --build build/test --target test_grid
	ctest --test-dir build/test -C Debug
	@echo "Done!"